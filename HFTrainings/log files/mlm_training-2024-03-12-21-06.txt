nohup: ignoring input
/home/user1-selab3/miniconda3/envs/myenv_python3_11/lib/python3.11/site-packages/datasets/load.py:1429: FutureWarning: The repository for code_search_net contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/code_search_net
You can avoid this message in future by passing the argument `trust_remote_code=True`.
Passing `trust_remote_code=True` will be mandatory to load this dataset from the next major release of `datasets`.
  warnings.warn(
You're using a RobertaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Some weights of the model checkpoint at microsoft/codebert-base-mlm were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']
- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
/home/user1-selab3/miniconda3/envs/myenv_python3_11/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '

'>>> code: public Boolean isWriteLocked(K token) {
	RWLock<K> lock = locks.get(token);
	if (lock == null) return null;
	return lock.isWriteLocked();
    }'

'>>> code: @Override
    public int getLevel() {
        Level level = log4jLogger.getLevel();
        if (level == null)
            level = Logger.getRootLogger().getLevel();
        switch (level.toInt()) {
            case Level.TRACE_INT:
                return TRACE;
            case Level.DEBUG_INT:
                return DEBUG;
            case Level.INFO_INT:
                return INFO;
            case Level.WARN_INT:
                return WARN;
            case Level.ERROR_INT:
                return ERROR;
            case Level.FATAL_INT:
                return FATAL;
            default:
                throw new IllegalArgumentException("Unsupported log4j level: " + level);
        }
    }'

'>>> code: public TerminalEmulatorDeviceConfiguration withCursorBlinking(boolean cursorBlinking) {
        if(this.cursorBlinking == cursorBlinking) {
            return this;
        } else {
            return new TerminalEmulatorDeviceConfiguration(
                    this.lineBufferScrollbackSize,
                    this.blinkLengthInMilliSeconds,
                    this.cursorStyle,
                    this.cursorColor,
                    cursorBlinking,
                    this.clipboardAvailable);
        }
    }'
'>>> code 0 length: 65'
'>>> code 1 length: 84'
'>>> code 2 length: 168'
'>>> Concatenated code length: 317'
'>>> Chunk length: 128'
'>>> Chunk length: 128'
'>>> Chunk length: 61'

'>>> <s>public void inquire(String vaultName, String resourceGroupName, String fabricName, String containerName) {
     <mask><mask> inquireWithServiceResponseAsync(vaultName, resourceYepName, fabric<mask>, containerName).toBlocking().single().body<mask>
<mask> <mask> }</s><s>public ServiceFuture<Void> inquireAsync(String vaultName, String resourceGroupName, String fabricName, String containerName<mask><mask> ServiceCallback<Void> serviceCallback)<mask>
   <mask>  everywhere  return ServiceFuture.fromResponse(inquireWith<mask><mask>Async<mask><mask>ault'

'>>> Name, resourceGroupName<mask><mask>Name, containerName), serviceCallback);
object   }</s><s>public Observable<Void> inquireAsync(String vaultName, String resourcekeredName, String<mask><mask>, String containerName, String filter) {
     <mask>  return inquireWithServiceResponseAsync(<mask>ault<mask>, resourceGroupName curse fabricName<mask> containerName,<mask>).map(<mask> Fun<mask>1<ServiceResponse<Void>, Void>() {
            @Override
            public'

'>>> <s>public void inquire(String vaultName, String resourceGroupName<mask> String fabricName,<mask><mask><mask>) {
        inquireWithServiceResponseAsync(vaultName, resourceGroupName<mask><mask><mask><mask> containerName).toBlocking().single<mask><mask>();
   <mask></s><s><mask> ServiceFuture<<mask><mask>> inquireAsync(String vaultName, String resourceGroupName<mask> String fabricName, String containerName, final ServiceCallback<Void> serviceCallback<mask> {
        return ServiceFuture.<mask><mask>(inquireWithServiceResponseAsync(vault'

'>>> Name,<mask><mask><mask><mask> fabricName, containerName<mask> serviceCallback<mask>
    }</s><s>public Observable<<mask><mask>> inquireAsync(String<mask><mask>, String resourceGroupName, String fabricName, String containerName, String filter<mask> {<mask><mask><mask><mask><mask><mask><mask><mask> return inquireWithServiceResponseAsync(vaultName, resourceGroupName, fabricName, containerName, filter).map(new Func1<<mask><mask><Void>, Void>() {
            @Override
            public'
Train dataset size: 8000
Validation dataset size: 1000
Test dataset size: 1000

  0%|          | 0/8 [00:00<?, ?it/s]
 38%|███▊      | 3/8 [00:00<00:00,  5.91it/s]
 50%|█████     | 4/8 [00:00<00:01,  3.99it/s]
 62%|██████▎   | 5/8 [00:01<00:00,  3.25it/s]
 75%|███████▌  | 6/8 [00:01<00:00,  2.91it/s]
 88%|████████▊ | 7/8 [00:02<00:00,  2.72it/s]
100%|██████████| 8/8 [00:02<00:00,  2.67it/s]
100%|██████████| 8/8 [00:03<00:00,  2.26it/s]
>>> Entropy: 1.2139
>>> Perplexity: 3.37
>>> Loss: 1.21

  0%|          | 0/189 [00:00<?, ?it/s]/home/user1-selab3/miniconda3/envs/myenv_python3_11/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '

  1%|          | 1/189 [00:00<02:49,  1.11it/s]
  1%|          | 2/189 [00:01<02:35,  1.20it/s]
  2%|▏         | 3/189 [00:02<02:31,  1.23it/s]
  2%|▏         | 4/189 [00:03<02:29,  1.24it/s]
  3%|▎         | 5/189 [00:04<02:27,  1.24it/s]
  3%|▎         | 6/189 [00:04<02:26,  1.25it/s]
  4%|▎         | 7/189 [00:05<02:25,  1.25it/s]
  4%|▍         | 8/189 [00:06<02:24,  1.25it/s]
  5%|▍         | 9/189 [00:07<02:23,  1.25it/s]
  5%|▌         | 10/189 [00:08<02:22,  1.25it/s]
  6%|▌         | 11/189 [00:08<02:21,  1.26it/s]
  6%|▋         | 12/189 [00:09<02:20,  1.26it/s]
  7%|▋         | 13/189 [00:10<02:20,  1.26it/s]
  7%|▋         | 14/189 [00:11<02:19,  1.25it/s]
  8%|▊         | 15/189 [00:12<02:18,  1.25it/s]
  8%|▊         | 16/189 [00:12<02:18,  1.25it/s]
  9%|▉         | 17/189 [00:13<02:17,  1.25it/s]
 10%|▉         | 18/189 [00:14<02:16,  1.25it/s]
 10%|█         | 19/189 [00:15<02:15,  1.26it/s]
 11%|█         | 20/189 [00:16<02:14,  1.26it/s]
 11%|█         | 21/189 [00:16<02:12,  1.27it/s]
 12%|█▏        | 22/189 [00:17<02:11,  1.27it/s]
 12%|█▏        | 23/189 [00:18<02:10,  1.27it/s]
 13%|█▎        | 24/189 [00:19<02:10,  1.27it/s]
 13%|█▎        | 25/189 [00:19<02:09,  1.26it/s]
 14%|█▍        | 26/189 [00:20<02:09,  1.26it/s]
 14%|█▍        | 27/189 [00:21<02:08,  1.26it/s]
 15%|█▍        | 28/189 [00:22<02:08,  1.25it/s]
 15%|█▌        | 29/189 [00:23<02:07,  1.25it/s]
 16%|█▌        | 30/189 [00:23<02:07,  1.25it/s]
 16%|█▋        | 31/189 [00:24<02:06,  1.25it/s]
 17%|█▋        | 32/189 [00:25<02:04,  1.26it/s]
 17%|█▋        | 33/189 [00:26<02:03,  1.26it/s]
 18%|█▊        | 34/189 [00:27<02:03,  1.25it/s]
 19%|█▊        | 35/189 [00:27<02:03,  1.25it/s]
 19%|█▉        | 36/189 [00:28<02:02,  1.25it/s]
 20%|█▉        | 37/189 [00:29<02:01,  1.25it/s]
 20%|██        | 38/189 [00:30<02:01,  1.25it/s]
 21%|██        | 39/189 [00:31<02:00,  1.25it/s]
 21%|██        | 40/189 [00:31<01:59,  1.25it/s]
 22%|██▏       | 41/189 [00:32<01:58,  1.25it/s]
 22%|██▏       | 42/189 [00:33<01:58,  1.25it/s]
 23%|██▎       | 43/189 [00:34<01:57,  1.24it/s]
 23%|██▎       | 44/189 [00:35<01:56,  1.24it/s]
 24%|██▍       | 45/189 [00:35<01:55,  1.24it/s]
 24%|██▍       | 46/189 [00:36<01:55,  1.24it/s]
 25%|██▍       | 47/189 [00:37<01:54,  1.24it/s]
 25%|██▌       | 48/189 [00:38<01:53,  1.24it/s]
 26%|██▌       | 49/189 [00:39<01:52,  1.24it/s]
 26%|██▋       | 50/189 [00:40<01:51,  1.24it/s]
 27%|██▋       | 51/189 [00:40<01:51,  1.24it/s]
 28%|██▊       | 52/189 [00:41<01:50,  1.24it/s]
 28%|██▊       | 53/189 [00:42<01:49,  1.24it/s]
 29%|██▊       | 54/189 [00:43<01:48,  1.24it/s]
 29%|██▉       | 55/189 [00:44<01:47,  1.24it/s]
 30%|██▉       | 56/189 [00:44<01:46,  1.25it/s]
 30%|███       | 57/189 [00:45<01:45,  1.25it/s]
 31%|███       | 58/189 [00:46<01:45,  1.25it/s]
 31%|███       | 59/189 [00:47<01:44,  1.25it/s]
 32%|███▏      | 60/189 [00:48<01:43,  1.25it/s]
 32%|███▏      | 61/189 [00:48<01:42,  1.25it/s]
 33%|███▎      | 62/189 [00:49<01:40,  1.26it/s]
 33%|███▎      | 63/189 [00:50<01:26,  1.45it/s]

  0%|          | 0/8 [00:00<?, ?it/s][A

 25%|██▌       | 2/8 [00:00<00:01,  4.67it/s][A

 38%|███▊      | 3/8 [00:00<00:01,  3.26it/s][A

 50%|█████     | 4/8 [00:01<00:01,  2.86it/s][A

 62%|██████▎   | 5/8 [00:01<00:01,  2.63it/s][A

 75%|███████▌  | 6/8 [00:02<00:00,  2.52it/s][A

 88%|████████▊ | 7/8 [00:02<00:00,  2.46it/s][A

100%|██████████| 8/8 [00:02<00:00,  2.47it/s][A
                                                

                                             
[A
 33%|███▎      | 63/189 [00:53<01:26,  1.45it/s]

100%|██████████| 8/8 [00:03<00:00,  2.47it/s][A

                                             [A
 34%|███▍      | 64/189 [00:54<03:38,  1.75s/it]
 34%|███▍      | 65/189 [00:55<03:02,  1.47s/it]
 35%|███▍      | 66/189 [00:55<02:36,  1.27s/it]
 35%|███▌      | 67/189 [00:56<02:18,  1.14s/it]
 36%|███▌      | 68/189 [00:57<02:05,  1.04s/it]
 37%|███▋      | 69/189 [00:58<01:56,  1.03it/s]
 37%|███▋      | 70/189 [00:59<01:49,  1.08it/s]
 38%|███▊      | 71/189 [00:59<01:45,  1.12it/s]
 38%|███▊      | 72/189 [01:00<01:41,  1.15it/s]
 39%|███▊      | 73/189 [01:01<01:38,  1.17it/s]
 39%|███▉      | 74/189 [01:02<01:36,  1.19it/s]
 40%|███▉      | 75/189 [01:03<01:34,  1.20it/s]
 40%|████      | 76/189 [01:04<01:33,  1.21it/s]
 41%|████      | 77/189 [01:04<01:32,  1.21it/s]
 41%|████▏     | 78/189 [01:05<01:31,  1.22it/s]
 42%|████▏     | 79/189 [01:06<01:30,  1.22it/s]
 42%|████▏     | 80/189 [01:07<01:29,  1.22it/s]
 43%|████▎     | 81/189 [01:08<01:27,  1.23it/s]
 43%|████▎     | 82/189 [01:08<01:26,  1.23it/s]
 44%|████▍     | 83/189 [01:09<01:26,  1.23it/s]
 44%|████▍     | 84/189 [01:10<01:25,  1.23it/s]
 45%|████▍     | 85/189 [01:11<01:24,  1.23it/s]
 46%|████▌     | 86/189 [01:12<01:24,  1.22it/s]
 46%|████▌     | 87/189 [01:13<01:23,  1.22it/s]
 47%|████▋     | 88/189 [01:13<01:22,  1.22it/s]
 47%|████▋     | 89/189 [01:14<01:21,  1.22it/s]
 48%|████▊     | 90/189 [01:15<01:21,  1.22it/s]
 48%|████▊     | 91/189 [01:16<01:20,  1.22it/s]
 49%|████▊     | 92/189 [01:17<01:19,  1.22it/s]
 49%|████▉     | 93/189 [01:17<01:18,  1.23it/s]
 50%|████▉     | 94/189 [01:18<01:17,  1.23it/s]
 50%|█████     | 95/189 [01:19<01:19,  1.19it/s]
 51%|█████     | 96/189 [01:20<01:17,  1.20it/s]
 51%|█████▏    | 97/189 [01:21<01:16,  1.20it/s]
 52%|█████▏    | 98/189 [01:22<01:15,  1.21it/s]
 52%|█████▏    | 99/189 [01:22<01:14,  1.21it/s]
 53%|█████▎    | 100/189 [01:23<01:13,  1.21it/s]
 53%|█████▎    | 101/189 [01:24<01:12,  1.21it/s]
 54%|█████▍    | 102/189 [01:25<01:11,  1.21it/s]
 54%|█████▍    | 103/189 [01:26<01:10,  1.21it/s]
 55%|█████▌    | 104/189 [01:27<01:10,  1.21it/s]
 56%|█████▌    | 105/189 [01:27<01:09,  1.21it/s]
 56%|█████▌    | 106/189 [01:28<01:08,  1.21it/s]
 57%|█████▋    | 107/189 [01:29<01:07,  1.21it/s]
 57%|█████▋    | 108/189 [01:30<01:06,  1.21it/s]
 58%|█████▊    | 109/189 [01:31<01:05,  1.22it/s]
 58%|█████▊    | 110/189 [01:32<01:05,  1.21it/s]
 59%|█████▊    | 111/189 [01:32<01:04,  1.21it/s]
 59%|█████▉    | 112/189 [01:33<01:03,  1.22it/s]
 60%|█████▉    | 113/189 [01:34<01:02,  1.22it/s]
 60%|██████    | 114/189 [01:35<01:01,  1.23it/s]
 61%|██████    | 115/189 [01:36<01:00,  1.23it/s]
 61%|██████▏   | 116/189 [01:36<00:59,  1.23it/s]
 62%|██████▏   | 117/189 [01:37<00:58,  1.23it/s]
 62%|██████▏   | 118/189 [01:38<00:57,  1.23it/s]
 63%|██████▎   | 119/189 [01:39<00:56,  1.23it/s]
 63%|██████▎   | 120/189 [01:40<00:56,  1.23it/s]
 64%|██████▍   | 121/189 [01:40<00:55,  1.22it/s]
 65%|██████▍   | 122/189 [01:41<00:55,  1.21it/s]
 65%|██████▌   | 123/189 [01:42<00:54,  1.21it/s]
 66%|██████▌   | 124/189 [01:43<00:53,  1.22it/s]
 66%|██████▌   | 125/189 [01:44<00:52,  1.22it/s]
                                                 

 66%|██████▌   | 125/189 [01:44<00:52,  1.22it/s]
 67%|██████▋   | 126/189 [01:44<00:44,  1.41it/s]{'eval_loss': 0.48385974764823914, 'eval_runtime': 3.3966, 'eval_samples_per_second': 294.414, 'eval_steps_per_second': 2.355, 'epoch': 1.0}
{'loss': 0.6091, 'learning_rate': 6.772486772486773e-06, 'epoch': 1.98}


  0%|          | 0/8 [00:00<?, ?it/s][A

 25%|██▌       | 2/8 [00:00<00:01,  4.58it/s][A

 38%|███▊      | 3/8 [00:00<00:01,  3.23it/s][A

 50%|█████     | 4/8 [00:01<00:01,  2.80it/s][A

 62%|██████▎   | 5/8 [00:01<00:01,  2.59it/s][A

 75%|███████▌  | 6/8 [00:02<00:00,  2.47it/s][A

 88%|████████▊ | 7/8 [00:02<00:00,  2.42it/s][A

100%|██████████| 8/8 [00:03<00:00,  2.44it/s][A
                                                 

                                             
[A
 67%|██████▋   | 126/189 [01:48<00:44,  1.41it/s]

100%|██████████| 8/8 [00:03<00:00,  2.44it/s][A

                                             [A
 67%|██████▋   | 127/189 [01:49<01:51,  1.80s/it]
 68%|██████▊   | 128/189 [01:49<01:31,  1.50s/it]
 68%|██████▊   | 129/189 [01:50<01:17,  1.30s/it]
 69%|██████▉   | 130/189 [01:51<01:08,  1.15s/it]
 69%|██████▉   | 131/189 [01:52<01:01,  1.05s/it]
 70%|██████▉   | 132/189 [01:53<00:56,  1.02it/s]
 70%|███████   | 133/189 [01:53<00:52,  1.07it/s]
 71%|███████   | 134/189 [01:54<00:49,  1.11it/s]
 71%|███████▏  | 135/189 [01:55<00:47,  1.14it/s]
 72%|███████▏  | 136/189 [01:56<00:45,  1.16it/s]
 72%|███████▏  | 137/189 [01:57<00:44,  1.18it/s]
 73%|███████▎  | 138/189 [01:58<00:42,  1.19it/s]
 74%|███████▎  | 139/189 [01:58<00:41,  1.20it/s]
 74%|███████▍  | 140/189 [01:59<00:40,  1.20it/s]
 75%|███████▍  | 141/189 [02:00<00:39,  1.21it/s]
 75%|███████▌  | 142/189 [02:01<00:38,  1.21it/s]
 76%|███████▌  | 143/189 [02:02<00:37,  1.22it/s]
 76%|███████▌  | 144/189 [02:03<00:36,  1.22it/s]
 77%|███████▋  | 145/189 [02:03<00:35,  1.22it/s]
 77%|███████▋  | 146/189 [02:04<00:35,  1.22it/s]
 78%|███████▊  | 147/189 [02:05<00:34,  1.22it/s]
 78%|███████▊  | 148/189 [02:06<00:33,  1.22it/s]
 79%|███████▉  | 149/189 [02:07<00:32,  1.21it/s]
 79%|███████▉  | 150/189 [02:07<00:32,  1.21it/s]
 80%|███████▉  | 151/189 [02:08<00:31,  1.21it/s]
 80%|████████  | 152/189 [02:09<00:30,  1.21it/s]
 81%|████████  | 153/189 [02:10<00:29,  1.21it/s]
 81%|████████▏ | 154/189 [02:11<00:28,  1.21it/s]
 82%|████████▏ | 155/189 [02:12<00:28,  1.21it/s]
 83%|████████▎ | 156/189 [02:12<00:27,  1.21it/s]
 83%|████████▎ | 157/189 [02:13<00:26,  1.21it/s]
 84%|████████▎ | 158/189 [02:14<00:25,  1.21it/s]
 84%|████████▍ | 159/189 [02:15<00:24,  1.21it/s]
 85%|████████▍ | 160/189 [02:16<00:24,  1.20it/s]
 85%|████████▌ | 161/189 [02:17<00:23,  1.21it/s]
 86%|████████▌ | 162/189 [02:17<00:22,  1.20it/s]
 86%|████████▌ | 163/189 [02:18<00:21,  1.21it/s]
 87%|████████▋ | 164/189 [02:19<00:20,  1.21it/s]
 87%|████████▋ | 165/189 [02:20<00:19,  1.21it/s]
 88%|████████▊ | 166/189 [02:21<00:19,  1.21it/s]
 88%|████████▊ | 167/189 [02:22<00:18,  1.21it/s]
 89%|████████▉ | 168/189 [02:22<00:17,  1.21it/s]
 89%|████████▉ | 169/189 [02:23<00:16,  1.21it/s]
 90%|████████▉ | 170/189 [02:24<00:15,  1.21it/s]
 90%|█████████ | 171/189 [02:25<00:14,  1.21it/s]
 91%|█████████ | 172/189 [02:26<00:14,  1.21it/s]
 92%|█████████▏| 173/189 [02:27<00:13,  1.20it/s]
 92%|█████████▏| 174/189 [02:27<00:12,  1.20it/s]
 93%|█████████▎| 175/189 [02:28<00:11,  1.20it/s]
 93%|█████████▎| 176/189 [02:29<00:10,  1.20it/s]
 94%|█████████▎| 177/189 [02:30<00:09,  1.20it/s]
 94%|█████████▍| 178/189 [02:31<00:09,  1.20it/s]
 95%|█████████▍| 179/189 [02:32<00:08,  1.20it/s]
 95%|█████████▌| 180/189 [02:32<00:07,  1.20it/s]
 96%|█████████▌| 181/189 [02:33<00:06,  1.21it/s]
 96%|█████████▋| 182/189 [02:34<00:05,  1.21it/s]
 97%|█████████▋| 183/189 [02:35<00:04,  1.21it/s]
 97%|█████████▋| 184/189 [02:36<00:04,  1.21it/s]
 98%|█████████▊| 185/189 [02:36<00:03,  1.21it/s]
 98%|█████████▊| 186/189 [02:37<00:02,  1.20it/s]
 99%|█████████▉| 187/189 [02:38<00:01,  1.20it/s]
 99%|█████████▉| 188/189 [02:39<00:00,  1.21it/s]
100%|██████████| 189/189 [02:40<00:00,  1.34it/s]{'eval_loss': 0.4865022599697113, 'eval_runtime': 3.4475, 'eval_samples_per_second': 290.065, 'eval_steps_per_second': 2.321, 'epoch': 2.0}


  0%|          | 0/8 [00:00<?, ?it/s][A

 25%|██▌       | 2/8 [00:00<00:01,  4.61it/s][A

 38%|███▊      | 3/8 [00:00<00:01,  3.22it/s][A

 50%|█████     | 4/8 [00:01<00:01,  2.79it/s][A

 62%|██████▎   | 5/8 [00:01<00:01,  2.60it/s][A

 75%|███████▌  | 6/8 [00:02<00:00,  2.48it/s][A

 88%|████████▊ | 7/8 [00:02<00:00,  2.42it/s][A

100%|██████████| 8/8 [00:03<00:00,  2.43it/s][A
                                                 

                                             
[A
100%|██████████| 189/189 [02:43<00:00,  1.34it/s]

100%|██████████| 8/8 [00:03<00:00,  2.43it/s][A

                                             [A
                                                 

100%|██████████| 189/189 [02:43<00:00,  1.34it/s]
100%|██████████| 189/189 [02:43<00:00,  1.16it/s]
{'eval_loss': 0.4661489725112915, 'eval_runtime': 3.4506, 'eval_samples_per_second': 289.802, 'eval_steps_per_second': 2.318, 'epoch': 3.0}
{'train_runtime': 163.4695, 'train_samples_per_second': 146.816, 'train_steps_per_second': 1.156, 'train_loss': 0.5840149934960421, 'epoch': 3.0}

  0%|          | 0/8 [00:00<?, ?it/s]
 25%|██▌       | 2/8 [00:00<00:01,  4.56it/s]
 38%|███▊      | 3/8 [00:00<00:01,  3.21it/s]
 50%|█████     | 4/8 [00:01<00:01,  2.79it/s]
 62%|██████▎   | 5/8 [00:01<00:01,  2.58it/s]
 75%|███████▌  | 6/8 [00:02<00:00,  2.49it/s]
 88%|████████▊ | 7/8 [00:02<00:00,  2.41it/s]
100%|██████████| 8/8 [00:03<00:00,  2.43it/s]
100%|██████████| 8/8 [00:03<00:00,  2.40it/s]
>>> Entropy: 0.4475
>>> Perplexity: 1.56
>>> Loss: 0.45

model.safetensors:   0%|          | 0.00/499M [00:00<?, ?B/s]

events.out.tfevents.1710295223.oisit-selab3:   0%|          | 0.00/306 [00:00<?, ?B/s][A


events.out.tfevents.1710295592.oisit-selab3:   0%|          | 0.00/5.88k [00:00<?, ?B/s][A[A



events.out.tfevents.1710295760.oisit-selab3:   0%|          | 0.00/40.0 [00:00<?, ?B/s][A[A[A




Upload 5 LFS files:   0%|          | 0/5 [00:00<?, ?it/s][A[A[A[A





training_args.bin:   0%|          | 0.00/4.73k [00:00<?, ?B/s][A[A[A[A[A


events.out.tfevents.1710295592.oisit-selab3: 100%|██████████| 5.88k/5.88k [00:00<00:00, 26.4kB/s][A[A

events.out.tfevents.1710295223.oisit-selab3: 100%|██████████| 306/306 [00:00<00:00, 1.34kB/s][A



events.out.tfevents.1710295760.oisit-selab3: 100%|██████████| 40.0/40.0 [00:00<00:00, 176B/s][A[A[A





training_args.bin: 100%|██████████| 4.73k/4.73k [00:00<00:00, 20.1kB/s][A[A[A[A[A
model.safetensors:   0%|          | 16.4k/499M [00:00<2:10:18, 63.8kB/s]
events.out.tfevents.1710295760.oisit-selab3: 100%|██████████| 40.0/40.0 [00:00<00:00, 125B/s]

events.out.tfevents.1710295592.oisit-selab3: 100%|██████████| 5.88k/5.88k [00:00<00:00, 17.9kB/s]

training_args.bin: 100%|██████████| 4.73k/4.73k [00:00<00:00, 14.0kB/s]

model.safetensors:   1%|          | 3.13M/499M [00:00<00:46, 10.7MB/s]  
events.out.tfevents.1710295223.oisit-selab3: 100%|██████████| 306/306 [00:00<00:00, 799B/s]  

model.safetensors:   3%|▎         | 13.1M/499M [00:00<00:12, 38.4MB/s]
model.safetensors:   4%|▎         | 18.0M/499M [00:00<00:16, 29.7MB/s]
model.safetensors:   5%|▌         | 25.9M/499M [00:00<00:11, 41.4MB/s]
model.safetensors:   6%|▋         | 32.0M/499M [00:01<00:17, 26.2MB/s]
model.safetensors:   8%|▊         | 39.9M/499M [00:01<00:13, 34.9MB/s]
model.safetensors:  10%|▉         | 48.0M/499M [00:01<00:14, 31.4MB/s]
model.safetensors:  11%|█▏        | 56.2M/499M [00:01<00:11, 39.4MB/s]
model.safetensors:  13%|█▎        | 64.0M/499M [00:02<00:15, 28.5MB/s]
model.safetensors:  14%|█▍        | 72.0M/499M [00:02<00:11, 35.7MB/s]
model.safetensors:  16%|█▌        | 80.0M/499M [00:02<00:12, 33.6MB/s]
model.safetensors:  19%|█▉        | 93.6M/499M [00:02<00:08, 48.9MB/s]
model.safetensors:  20%|██        | 101M/499M [00:02<00:09, 40.6MB/s] 
model.safetensors:  22%|██▏       | 112M/499M [00:03<00:09, 39.6MB/s]
model.safetensors:  24%|██▍       | 120M/499M [00:03<00:08, 45.7MB/s]
model.safetensors:  26%|██▌       | 128M/499M [00:03<00:10, 36.3MB/s]
model.safetensors:  27%|██▋       | 137M/499M [00:03<00:08, 43.7MB/s]
model.safetensors:  29%|██▉       | 144M/499M [00:04<00:10, 34.6MB/s]
model.safetensors:  31%|███       | 155M/499M [00:04<00:07, 43.8MB/s]
model.safetensors:  32%|███▏      | 161M/499M [00:04<00:09, 35.1MB/s]
model.safetensors:  34%|███▎      | 168M/499M [00:04<00:07, 41.5MB/s]
model.safetensors:  35%|███▌      | 176M/499M [00:05<00:11, 29.2MB/s]
model.safetensors:  38%|███▊      | 188M/499M [00:05<00:07, 42.2MB/s]
model.safetensors:  39%|███▉      | 195M/499M [00:05<00:08, 35.2MB/s]
model.safetensors:  41%|████      | 205M/499M [00:05<00:06, 44.8MB/s]
model.safetensors:  43%|████▎     | 212M/499M [00:05<00:07, 40.2MB/s]
model.safetensors:  45%|████▍     | 222M/499M [00:05<00:05, 50.2MB/s]
model.safetensors:  46%|████▌     | 229M/499M [00:06<00:07, 35.6MB/s]
model.safetensors:  48%|████▊     | 239M/499M [00:06<00:05, 46.0MB/s]
model.safetensors:  49%|████▉     | 246M/499M [00:06<00:06, 37.2MB/s]
model.safetensors:  51%|█████▏    | 256M/499M [00:06<00:05, 46.6MB/s]
model.safetensors:  53%|█████▎    | 262M/499M [00:07<00:06, 37.8MB/s]
model.safetensors:  55%|█████▍    | 272M/499M [00:07<00:05, 38.3MB/s]
model.safetensors:  56%|█████▌    | 280M/499M [00:07<00:04, 44.6MB/s]
model.safetensors:  58%|█████▊    | 288M/499M [00:12<00:43, 4.84MB/s]
model.safetensors:  59%|█████▊    | 292M/499M [00:12<00:36, 5.69MB/s]
model.safetensors:  61%|██████    | 304M/499M [00:12<00:20, 9.37MB/s]
model.safetensors:  62%|██████▏   | 310M/499M [00:13<00:18, 10.1MB/s]
model.safetensors:  64%|██████▎   | 318M/499M [00:13<00:13, 13.9MB/s]
model.safetensors:  65%|██████▍   | 323M/499M [00:13<00:12, 13.9MB/s]
model.safetensors:  67%|██████▋   | 333M/499M [00:13<00:08, 20.2MB/s]
model.safetensors:  68%|██████▊   | 339M/499M [00:14<00:08, 19.9MB/s]
model.safetensors:  70%|███████   | 350M/499M [00:14<00:05, 29.2MB/s]
model.safetensors:  71%|███████▏  | 356M/499M [00:14<00:06, 21.5MB/s]
model.safetensors:  72%|███████▏  | 361M/499M [00:14<00:05, 24.2MB/s]
model.safetensors:  74%|███████▍  | 368M/499M [00:15<00:05, 22.0MB/s]
model.safetensors:  76%|███████▌  | 377M/499M [00:15<00:04, 28.9MB/s]
model.safetensors:  77%|███████▋  | 384M/499M [00:15<00:04, 26.0MB/s]
model.safetensors:  79%|███████▊  | 392M/499M [00:15<00:03, 32.5MB/s]
model.safetensors:  80%|████████  | 400M/499M [00:16<00:03, 25.4MB/s]
model.safetensors:  82%|████████▏ | 408M/499M [00:16<00:02, 31.8MB/s]
model.safetensors:  83%|████████▎ | 416M/499M [00:17<00:03, 23.8MB/s]
model.safetensors:  86%|████████▌ | 427M/499M [00:17<00:02, 34.0MB/s]
model.safetensors:  87%|████████▋ | 433M/499M [00:17<00:02, 23.8MB/s]
model.safetensors:  89%|████████▉ | 444M/499M [00:17<00:01, 32.3MB/s]
model.safetensors:  90%|█████████ | 450M/499M [00:17<00:01, 31.5MB/s]
model.safetensors:  93%|█████████▎| 462M/499M [00:18<00:00, 44.2MB/s]
model.safetensors:  94%|█████████▍| 469M/499M [00:18<00:00, 38.6MB/s]
model.safetensors:  96%|█████████▌| 480M/499M [00:18<00:00, 38.7MB/s]
model.safetensors:  99%|█████████▉| 493M/499M [00:18<00:00, 51.9MB/s]
model.safetensors: 100%|██████████| 499M/499M [00:19<00:00, 25.9MB/s]





Upload 5 LFS files:  20%|██        | 1/5 [00:19<01:17, 19.47s/it][A[A[A[A
Upload 5 LFS files: 100%|██████████| 5/5 [00:19<00:00,  3.89s/it]
[{'score': 0.9804933667182922, 'token': 1045, 'token_str': ' create', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return create(node, source, false);\n    }'}, {'score': 0.005127527751028538, 'token': 10516, 'token_str': ' evaluate', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return evaluate(node, source, false);\n    }'}, {'score': 0.0009253571042791009, 'token': 146, 'token_str': ' make', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return make(node, source, false);\n    }'}, {'score': 0.0008374108001589775, 'token': 1119, 'token_str': ' build', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return build(node, source, false);\n    }'}, {'score': 0.0005258881137706339, 'token': 120, 'token_str': ' get', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return get(node, source, false);\n    }'}]
[{'score': 0.9804933667182922, 'token': 1045, 'token_str': ' create', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return create(node, source, false);\n    }'}, {'score': 0.005127527751028538, 'token': 10516, 'token_str': ' evaluate', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return evaluate(node, source, false);\n    }'}, {'score': 0.0009253571042791009, 'token': 146, 'token_str': ' make', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return make(node, source, false);\n    }'}, {'score': 0.0008374108001589775, 'token': 1119, 'token_str': ' build', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return build(node, source, false);\n    }'}, {'score': 0.0005258881137706339, 'token': 120, 'token_str': ' get', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return get(node, source, false);\n    }'}]
[{'score': 0.9804933667182922, 'token': 1045, 'token_str': ' create', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return create(node, source, false);\n    }'}, {'score': 0.005127527751028538, 'token': 10516, 'token_str': ' evaluate', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return evaluate(node, source, false);\n    }'}, {'score': 0.0009253571042791009, 'token': 146, 'token_str': ' make', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return make(node, source, false);\n    }'}, {'score': 0.0008374108001589775, 'token': 1119, 'token_str': ' build', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return build(node, source, false);\n    }'}, {'score': 0.0005258881137706339, 'token': 120, 'token_str': ' get', 'sequence': 'public Evaluation create(SimpleNode node, Object source)\n    {\n        return get(node, source, false);\n    }'}]
 create
1
[1.0, 0.5, 0.3333333333333333, 0.25, 0.2]
Mean Reciprocal Rank (MRR): 0.45666666666666667
 create
      score  ...                                           sequence
0  0.980493  ...  public Evaluation create(SimpleNode node, Obje...
1  0.005128  ...  public Evaluation create(SimpleNode node, Obje...
2  0.000925  ...  public Evaluation create(SimpleNode node, Obje...
3  0.000837  ...  public Evaluation create(SimpleNode node, Obje...
4  0.000526  ...  public Evaluation create(SimpleNode node, Obje...

[5 rows x 4 columns]
1
0    1
1    2
2    3
3    4
4    5
Name: rank, dtype: int64
Mean Reciprocal Rank (MRR): 0.45666666666666667
Elapsed time: 3 minutes 20 seconds
